version: '3.7'

services:
    app:
        image: golang:1.14.3
        ports:
            - 8080:8080
        environment:
            - GAPI_SERVER_ADDRESS=:8080
            - GAPI_SERVER_WRITE_TIMEOUT=15s
            - GAPI_SERVER_READ_TIMEOUT=15s
            - GAPI_SERVER_IDLE_TIMEOUT=1m
            - GAPI_SERVER_SHUTDOWN_TIMEOUT=30s
            - GAPI_CORS_ALLOWED_HEADERS=Authorization,Content-Type,*
            - GAPI_CORS_ALLOWED_METHODS=PUT,GET,POST,DELETE,PATCH,OPTIONS
            - GAPI_CORS_ALLOWED_ORIGINS=*
            - GAPI_CORS_EXPOSED_HEADERS=PUT,GET,POST,DELETE,PATCH,OPTIONS
            - GAPI_CORS_MAX_AGE=1728000 
            - GOPATH=/go
            - GOROOT=/usr/local/go
            - GAPI_DB_DATABASE=api-sample
            - GAPI_DB_HOST=localhost
            - GAPI_DB_PORT=5432
            - GAPI_DB_USER=api
            - GAPI_DB_PASS=Api@123
            - GAPI_ENVIRONMENT=Development
        volumes:
            - $PWD:/go/src/app
        working_dir: /go/src/app
        command: bash -c "CGO_ENABLED=0 GOOS=linux go build -mod vendor -a -o ./app ./cmd/app && ./app"

    postgres:
        container_name: api-postgres
        image: postgres:12.1-alpine
        ports:
            - "5432:5432"
        healthcheck:
            interval: 1s
            timeout: 30s
            retries: 30
        volumes:
            - pgdata:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: api
            POSTGRES_PASSWORD: Api@123
            POSTGRES_DB: api-sample
        networks:
            - postgres-compose-network
    pgadmin:
        container_name: api-sample
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: "guest@guest.com"
            PGADMIN_DEFAULT_PASSWORD: "guest"
        ports:
            - "16540:80"
        volumes:
            - ./pgadmin/pgadmin_servers.json:/pgadmin4/servers.json
        depends_on:
            - postgres
        networks:
            - postgres-compose-network

networks:
  postgres-compose-network:
    driver: bridge

volumes:
  pgdata: